sup <- matchdata %>% filter(position=="Support")
model <- models[[2]]
dataset <- mid
fit <- lm(model, dataset)
a <- dataset %>% mutate(
perc_diff=fit$residuals/fit$fitted.values)
a %>%
group_by(league, team, player) %>%
summarise(dmg_performance = mean(perc_diff)*100) %>%
arrange(league, desc(dmg_performance)) %T>%
write_csv(paste0(savefolder, dataset$position[1], "_dmg_ratings.csv"))
ggplot(a,  aes(x=fct_reorder(player, perc_diff, mean), y=perc_diff)) +
ylim(-1,1) +
coord_flip() +
facet_grid(league ~., scales="free", space="free") +
geom_boxplot() +
labs(x=NULL, y="% difference of actual damage from expected") +
theme_minimal() +
geom_vline(xintercept = 0, color="gray") +
theme(axis.text.y = element_text(size=8))
ggplot(a,  aes(x=fct_reorder(player, perc_diff, mean), y=perc_diff)) +
ylim(-1,1) +
coord_flip() +
facet_grid(league ~., scales="free", space="free") +
geom_boxplot() +
labs(x=NULL, y="% difference of actual damage from expected") +
theme_minimal() +
geom_vline(aes(xintercept = 0), color="gray") +
theme(axis.text.y = element_text(size=8))
ggplot(a,  aes(x=fct_reorder(player, perc_diff, mean), y=perc_diff)) +
ylim(-1,1) +
coord_flip() +
facet_grid(league ~., scales="free", space="free") +
geom_boxplot() +
labs(x=NULL, y="% difference of actual damage from expected") +
theme_minimal() +
geom_hline(aes(yintercept = 0), color="gray") +
theme(axis.text.y = element_text(size=8))
ggplot(a,  aes(x=fct_reorder(player, perc_diff, mean), y=perc_diff)) +
ylim(-1,1) +
coord_flip() +
facet_grid(league ~., scales="free", space="free") +
geom_boxplot() +
labs(x=NULL, y="% difference of actual damage from expected") +
theme_minimal() +
geom_hline(aes(yintercept = 0), color="red") +
theme(axis.text.y = element_text(size=8))
save_dmg_rating <- function(dataset, model){
fit <- lm(model, dataset)
a <- dataset %>% mutate(
perc_diff=fit$residuals/fit$fitted.values)
a %>%
group_by(league, team, player) %>%
summarise(dmg_performance = mean(perc_diff)*100) %>%
arrange(league, desc(dmg_performance)) %T>%
write_csv(paste0(savefolder, dataset$position[1], "_dmg_ratings.csv"))
ggplot(a,  aes(x=fct_reorder(player, perc_diff, mean), y=perc_diff)) +
ylim(-1,1) +
coord_flip() +
facet_grid(league ~., scales="free", space="free") +
geom_boxplot() +
labs(x=NULL, y="% difference of actual damage from expected") +
theme_minimal() +
geom_hline(aes(yintercept = 0), color="red") +
theme(axis.text.y = element_text(size=8))
ggsave(paste0(savefolder, dataset$position[1], "_graph.png"),
width=6, height=14)
return(a)
}
all_dmg <- map_df(list(top, jungle, mid, adc, sup),
save_dmg_rating, model=model)
player_games <- matchdata %>% group_by(player) %>% summarise(p_games=n())
matchdata <- matchdata %>% group_by(player) %>%
summarise(p_games=n()) %>%
right_join(matchdata)
View(matchdata)
matchdata <- matchdata %>% arrange(champion)
top <- matchdata %>% filter(position=="Top")
jungle <- matchdata %>% filter(position=="Jungle")
mid <- matchdata %>% filter(position=="Middle")
adc <- matchdata %>% filter(position=="ADC")
sup <- matchdata %>% filter(position=="Support")
dataset <- top
fit <- lm(model, dataset)
a <- dataset %>% mutate(
perc_diff=fit$residuals/fit$fitted.values)
a %>%
group_by(league, team, player) %>%
summarise(dmg_performance = mean(perc_diff)*100) %>%
arrange(league, desc(dmg_performance)) %T>%
write_csv(paste0(savefolder, dataset$position[1], "_dmg_ratings.csv"))
ggplot(a,  aes(x=fct_reorder(paste0(player, " (", p_games, ")"), perc_diff, mean), y=perc_diff)) +
ylim(-1,1) +
coord_flip() +
facet_grid(league ~., scales="free", space="free") +
geom_boxplot() +
labs(x=NULL, y="% difference of actual damage from expected") +
theme_minimal() +
geom_hline(aes(yintercept = 0), color="red") +
theme(axis.text.y = element_text(size=8))
save_dmg_rating <- function(dataset, model){
fit <- lm(model, dataset)
a <- dataset %>% mutate(
perc_diff=fit$residuals/fit$fitted.values)
a %>%
group_by(league, team, player) %>%
summarise(dmg_performance = mean(perc_diff)*100) %>%
arrange(league, desc(dmg_performance)) %T>%
write_csv(paste0(savefolder, dataset$position[1], "_dmg_ratings.csv"))
ggplot(a,  aes(x=fct_reorder(paste0(player, " (", p_games, ")"), perc_diff, mean), y=perc_diff)) +
ylim(-1,1) +
coord_flip() +
facet_grid(league ~., scales="free", space="free") +
geom_boxplot() +
labs(x=NULL, y="% difference of actual damage from expected") +
theme_minimal() +
geom_hline(aes(yintercept = 0), color="red") +
theme(axis.text.y = element_text(size=8))
ggsave(paste0(savefolder, dataset$position[1], "_graph.png"),
width=6, height=14)
return(a)
}
all_dmg <- map_df(list(top, jungle, mid, adc, sup),
save_dmg_rating, model=model)
matchdata <- here("Data/") %>%
paste0(list.files(.)) %>%
map_df(read_xlsx, col_types=c(rep("text", 4), "date",
rep("text", 14),
rep("numeric", 72))) %>%
filter(player != "Team") %>%
select(gameid, league, split, week, game, team, side, player,
position, champion, gamelength, result, k, a, teamkills,
firedrakes, dmgtochamps, dmgtochampsperminute,
earnedgpm, goldspent, totalgold, dmgshare) %>%
filter(!(week %in% c("QF", "T", "F", "R1", "R2",
"R3", "RR", "SF", "3P"))) %>%
mutate(week=week %>% as.numeric) %>%
filter(split=="2017-2" | week >= 9) %>%
filter(!is.na(dmgtochamps)) %>%
mutate(otherkills=teamkills-k-a,
killshare=k/teamkills)
matchdata <- matchdata %>%
group_by(position, player, champion) %>%
summarise(n_games=n()) %>%
group_by(position, champion) %>%
summarise(n_total=sum(n_games),
max_by_one=max(n_games),
min_leftover=n_total-max_by_one) %>%
filter(min_leftover >= 5) %>%
inner_join(matchdata)
matchdata <- matchdata %>% group_by(player) %>%
summarise(p_games=n()) %>%
filter(p_games > 10) %>%
right_join(matchdata)
matchdata <- matchdata %>% arrange(champion)
top <- matchdata %>% filter(position=="Top")
jungle <- matchdata %>% filter(position=="Jungle")
mid <- matchdata %>% filter(position=="Middle")
adc <- matchdata %>% filter(position=="ADC")
sup <- matchdata %>% filter(position=="Support")
model <- models[[2]]
all_dmg <- map_df(list(top, jungle, mid, adc, sup),
save_dmg_rating, model=model)
library(magrittr)
library(syuzhet)
library(reticulate)
textfile <- "" #name of file with tweets to score
textfile <- "~/Downloads/tweettxt_Jan_21.csv" #name of file with tweets to score
textfile <- read_csv(textfile)
library(here)
library(tidyverse)
library(magrittr)
library(syuzhet)
library(reticulate)
textfile <- read_csv(textfile)
View(textfile)
text <- textfile$texttweet_all
use_condaenv("py36", required=TRUE)
vader <- import("vaderSentiment.vaderSentiment")
vader_analyzer <- vader$SentimentIntensityAnalyzer()
vader <- sapply(text, function(tweet) {
scores <- vader_analyzer$polarity_scores(tweet)
scores$compound
})
names(vader) <- NULL
bing <- get_sentiment(text, method="bing")/0.63023076
afinn <- get_sentiment(text, method="afinn")/1.64318896
final_score <- cbind(vader, bing, afinn) %>%
apply(1, function(scores){
s <- sum(scores)/3
ifelse(abs(s)>4, sign(s)*4, s)
})
savefile <- "~/Downloads/tweet_vals_Jan_21.csv"
savedf <- read_csv(savefile)
problems()
View(savedf)
?read_csv
savedf <- read_csv(savefile, na=c("", "NA", "None"))
problems(...)
?problems
problems(savedf)
problems(savedf) %>% View
savedf[144015,]
colnames(savedf)
?read_csv
vignette("column-types")
vignette("column-types")
library(tidverse)
library(tidyverse)
vignette("column-types")
colnames(savedf)
list(col_integer(),rep(col_character(), 11),
col_double(), col_double(),
rep(col_character(),10)))
list(col_integer(),rep(col_character(), 11),
col_double(), col_double(),
rep(col_character(),10))
savedf <- read_csv(savefile, na=c("", "NA", "None"),
col_types=list(col_integer(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_double(), col_double(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character()))
problems(savedf) %>% View
savedf[187866,]
savedf[187866,] %>% View
nrow(savedf)
savedf <- tibble(
sentiment = final_score,
twidval=textdf$twidval
) %>%
inner_join(savedf)
textfile <- "~/Downloads/tweettxt_Jan_21.csv" #name of file with tweets to score
textdf <- read_csv(textfile)
savedf <- tibble(
sentiment = final_score,
twidval=textdf$twidval
) %>%
inner_join(savedf)
nrow(savedf)
textdf %>% View
textdf <- read_csv(textfile)
problems(textdf)
problems(textdf) %>% View
colnames(textdf)
?read.csv
textdf <- read.csv(textfile)
textfile <- "~/Downloads/tweettxt_Jan_21.csv" #name of file with tweets to score
textdf <- read_csv(textfile)
problems(textdf) %>% View
textdf <- read_csv(textfile)
problems(textdf) %>% View
textdf <- read_csv(textfile)
problems(textdf) %>% View
textdf <- read_csv(textfile)
problems(textdf) %>% View
textdf <- read_csv(textfile)
problems(textdf) %>% View
textdf <- read_csv(textfile)
problems(textdf) %>% View
textdf[155324,]
textdf[c(155324, 155325),] %>% View
t
textdf <- read_csv(textfile)
problems(textdf) %>% View
textdf[c(500, 501, 8610, 8611),] %>% View
textfile <- "~/Downloads/tweettxt_Jan_21_amy.csv" #name of file with tweets to score
textdf <- read_csv(textfile)
problems(textdf) %>% View
colnames(textdf)
textdf <- read_csv(textfile)
problems(textdf) %>% View
textdf[c(393216,393217),] %>% View
sum(textdf$end == "end")
sum(textdf$end == "end", na.rm=TRUE)
nrow(textdf)
textdf[textdf$end != "end",] %>% View
textdf <- na.omit(textdf)
nrow(textdf)
textdf <- read_csv(textfile)
all_na <- apply(textdf, 1, function(x) { sum(x, na.rm=TRUE) %>% is.na})
textdf[textdf$end != "end",] %>% View
textdf <- textdf[textdf$end == "end",]
use_condaenv("py36", required=TRUE)
vader <- import("vaderSentiment.vaderSentiment")
vader_analyzer <- vader$SentimentIntensityAnalyzer()
vader <- sapply(text, function(tweet) {
scores <- vader_analyzer$polarity_scores(tweet)
scores$compound
})
names(vader) <- NULL
bing <- get_sentiment(text, method="bing")/0.63023076
afinn <- get_sentiment(text, method="afinn")/1.64318896
final_score <- cbind(vader, bing, afinn) %>%
apply(1, function(scores){
s <- sum(scores)/3
ifelse(abs(s)>4, sign(s)*4, s)
})
savefile <- "~/Downloads/tweet_vals_Jan_21.csv"
savedf <- read_csv(savefile, na=c("", "NA", "None"),
col_types=list(col_integer(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_double(), col_double(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character()))
problems(savedf) %>% View
savedf[c(144015, 144014, 218793, 219794),] %>% View
problems(savedf) %>% View
savedf[c(144015, 144014, 218793, 219794),] %>% View
problems(savedf) %>% View
savedf[c(287278, 287279, 287280, 287865, 287866),] %>% View
savedf[c(287278, 287279, 287280, 287865, 287866, 287867),] %>% View
?read_csv
savedf <- read_csv(savefile, na=c("", "NA", "None"), quote='\'',
col_types=list(col_integer(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_double(), col_double(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character()))
problems(savedf) %>% View
savedf <- read_csv(savefile, na=c("", "NA", "None"),
col_types=list(col_integer(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_double(), col_double(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character()))
savedf <- read_csv(savefile, na=c("", "NA", "None"),
col_types=list(col_integer(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_double(), col_double(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character()))
problems(savedf) %>% View
savedf[c(248270, 290060),] %>% View
problems(savedf) %>% View
savedf[c(307832,309143,450792,517833,679057),] %>% View
savedf <- read_csv(savefile, na=c("", "NA", "None"),
col_types=list(col_integer(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_double(), col_double(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character()))
problems(savedf) %>% View
savedf[c(290060, 307832, 309143, 517833, 679057),] %>% View
savedf <- read_csv(savefile, na=c("", "NA", "None"),
col_types=list(col_integer(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_double(), col_double(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character()))
savedf[c(290060, 307832, 309143, 517833, 679057),] %>% View
problems(savedf) %>% View
savedf[c(290060, 307832, 309143, 517833, 679057),] %>% View
savedf <- read_csv(savefile, na=c("", "NA", "None"),
col_types=list(col_integer(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_double(), col_double(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character()))
savedf <- tibble(
sentiment = final_score,
twidval=textdf$twidval
) %>%
inner_join(savedf)
nrow(savedf)
nrow(textdf)
textdf <- textdf[textdf$end == "end",]
nrow(textdf)
savedf <- tibble(
sentiment = final_score,
twidval=textdf$twidval
) %>%
full_join(savedf)
textdf$twidval
View(textdf[,c("twidval", "texttweet_all")])
length(textdf$twidval)
length(final_score)
length(vader)
length(bing)
length(afinn)
textfile <- "~/Downloads/tweettxt_Jan_21_amy.csv" #name of file with tweets to score
textdf <- read_csv(textfile)
text <- textdf$texttweet_all
textdf[textdf$end != "end",] %>% View
textdf <- textdf[textdf$end == "end",]
nrow(textdf)
sum(is.na(vader))
summary(vader)
sum(is.na(bing))
vader <- import("vaderSentiment.vaderSentiment")
vader_analyzer <- vader$SentimentIntensityAnalyzer()
vader <- sapply(text, function(tweet) {
scores <- vader_analyzer$polarity_scores(tweet)
scores$compound
})
names(vader) <- NULL
bing <- get_sentiment(text, method="bing")/0.63023076
afinn <- get_sentiment(text, method="afinn")/1.64318896
final_score <- cbind(vader, bing, afinn) %>%
apply(1, function(scores){
s <- sum(scores)/3
ifelse(abs(s)>4, sign(s)*4, s)
})
length(final_score) == length(textdf$twidval)
savefile <- "~/Downloads/tweet_vals_Jan_21.csv"
savedf <- read_csv(savefile, na=c("", "NA", "None"),
col_types=list(col_integer(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_double(), col_double(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character()))
savedf <- tibble(
sentiment = final_score,
twidval=textdf$twidval
) %>%
full_join(savedf)
savefile <- "~/Downloads/tweet_vals_Jan_21.csv"
savedf <- read_csv(savefile, na=c("", "NA", "None"),
col_types=list(col_integer(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_double(), col_double(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character(),
col_character(),col_character()))
nrow(savedf)
savedf <- tibble(
sentiment = final_score,
twidval=textdf$twidval
) %>%
inner_join(savedf)
nrow(savedf)
length(final_score)
nrow(savedf)
nrow(textdf)
textdf$sentiment <- final_score
?write_csv
write_csv(textdf, textfile, na="None")
nrow(textdf)
ncol(textdf)
textdf <- textdf[,c(1:13, 15, 14)]
write_csv(textdf, textfile, na="None")
write_csv(textdf, textfile, na="None")
write_csv(textdf[,-14], "~/Downloads/tweettxt_Jan_21_emojis.csv", na="None")
